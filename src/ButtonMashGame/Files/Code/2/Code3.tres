package org.chocosolver.samples;
import org.chocosolver.solver.Model;
import org.chocosolver.solver.Solution;
import org.chocosolver.solver.variables.IntVar;

public class NQueen {

	public void modelAndSolve(){
		int n = 6, roll = 29;
		int group[][] = {
			{0, 0, 3, 5, 5, 5},
			{0, 3, 3, 3, 5, 6},
			{0, 2, 3, 4, 5, 6},
			{0, 2, 4, 4, 4, 6},
			{1, 2, 2, 4, 7, 6},
			{1, 1, 1, 1, 7, 6}
		};
		int board[][] = {
			{0, 0, 0, 0, 0, 0},
			{0, 0, 0, 5, 0, 3},
			{5, 0, 0, 0, 0, 0},
			{0, 1, 0, 0, 0, 0},
			{5, 0, 0, 0, 0, 5},
			{0, 0, 0, 0, 0, 0}
		};
		int numGroup[] = {0, 0, 0, 0, 0, 0, 0, 0};

		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				numGroup[group[k][j]]++;
			}
		}

		Model model = new Model("book-6 problem-14 suguru");
		IntVar[][] vars = new IntVar[n][n];

		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if (board[k][j] != 0) {
					vars[k][j] = model.intVar("cell_" + i + "_" + j, board[k][j], board[k][j]);
				}
				else {
					vars[k][j] = model.intVar("cell_" + i + "_" + j, 1, numGroup[group[k][j]]);
				}
			}
		}

		for(int i = 0; i < n; i++){
		for(int j = 0; j < n; j++){
			for (int k = 0; k < n; k++) {
			for (int l = 0; l < n; l++) {
				if (i == k && j == l) {
					continue;
				}

				if ((Math.abs(i - k) < 2 && Math.abs(j - l) < 2) || group[k][j] == group[k][l]) {
					model.arithm(vars[k][j], "!=",vars[k][l]).post();
				}
			}
			}
		}}

		Solution solution = model.getSolver().findSolution();
		if(solution != null){
			System.out.println(solution.toString());
		}
	}

	public static void main(String[] args) {
		new NQueen().modelAndSolve();
	}

}
